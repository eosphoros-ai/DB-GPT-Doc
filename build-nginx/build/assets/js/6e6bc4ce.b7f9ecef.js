"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4629],{6607:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>h});var r=t(4848),l=t(8453),o=t(1470),s=t(9365);const a={},c="Chat",i={id:"api/chat",title:"Chat",description:"Given a list of messages comprising a conversation, the model will return a response.",source:"@site/docs/api/chat.md",sourceDirName:"api",slug:"/api/chat",permalink:"/docs/latest/api/chat",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/latest/api/introduction"},next:{title:"App",permalink:"/docs/latest/api/app"}},d={},h=[{value:"Examples",id:"examples",level:3},{value:"Stream Chat Completion",id:"stream-chat-completion",level:3},{value:"Chat Completion Stream Response",id:"chat-completion-stream-response",level:3},{value:"Chat Completion",id:"chat-completion",level:3},{value:"Chat Completion Response",id:"chat-completion-response",level:3},{value:"Request body",id:"request-body",level:3},{value:"Chat Stream Response Body",id:"chat-stream-response-body",level:3},{value:"Chat Response Body",id:"chat-response-body",level:3}];function p(e){const n={code:"code",h1:"h1",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"chat",children:"Chat"}),"\n",(0,r.jsx)(n.p,{children:"Given a list of messages comprising a conversation, the model will return a response."}),"\n",(0,r.jsx)(n.h1,{id:"create-chat-completion",children:"Create Chat Completion"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"POST /api/v2/chat/completions\n"})}),"\n",(0,r.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n","\n","\n",(0,r.jsx)(n.h3,{id:"stream-chat-completion",children:"Stream Chat Completion"}),"\n",(0,r.jsxs)(o.A,{defaultValue:"python",groupId:"chat",values:[{label:"Curl",value:"curl"},{label:"Python",value:"python"}],children:[(0,r.jsx)(s.A,{value:"curl",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:' DBGPT_API_KEY="dbgpt"\n\n curl -X POST "http://localhost:5000/api/v2/chat/completions" \\\n    -H "Authorization: Bearer $DBGPT_API_KEY" \\\n    -H "accept: application/json" \\\n    -H "Content-Type: application/json" \\\n    -d "{\\"messages\\":\\"Hello\\",\\"model\\":\\"chatgpt_proxyllm\\", \\"stream\\": true}"\n\n'})})}),(0,r.jsx)(s.A,{value:"python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from dbgpt.client import Client\n\nDBGPT_API_KEY = "dbgpt"\nclient = Client(api_key=DBGPT_API_KEY)\n\nasync for data in client.chat_stream(\n    model="chatgpt_proxyllm",\n    messages="hello",\n):\n    print(data)\n'})})})]}),"\n",(0,r.jsx)(n.h3,{id:"chat-completion-stream-response",children:"Chat Completion Stream Response"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-commandline",children:'data: {"id": "chatcmpl-ba6fb52e-e5b2-11ee-b031-acde48001122", "model": "chatgpt_proxyllm", "choices": [{"index": 0, "delta": {"role": "assistant", "content": "Hello"}}]}\n\ndata: {"id": "chatcmpl-ba6fb52e-e5b2-11ee-b031-acde48001122", "model": "chatgpt_proxyllm", "choices": [{"index": 0, "delta": {"role": "assistant", "content": "!"}}]}\n\ndata: {"id": "chatcmpl-ba6fb52e-e5b2-11ee-b031-acde48001122", "model": "chatgpt_proxyllm", "choices": [{"index": 0, "delta": {"role": "assistant", "content": " How"}}]}\n\ndata: {"id": "chatcmpl-ba6fb52e-e5b2-11ee-b031-acde48001122", "model": "chatgpt_proxyllm", "choices": [{"index": 0, "delta": {"role": "assistant", "content": " can"}}]}\n\ndata: {"id": "chatcmpl-ba6fb52e-e5b2-11ee-b031-acde48001122", "model": "chatgpt_proxyllm", "choices": [{"index": 0, "delta": {"role": "assistant", "content": " I"}}]}\n\ndata: {"id": "chatcmpl-ba6fb52e-e5b2-11ee-b031-acde48001122", "model": "chatgpt_proxyllm", "choices": [{"index": 0, "delta": {"role": "assistant", "content": " assist"}}]}\n\ndata: {"id": "chatcmpl-ba6fb52e-e5b2-11ee-b031-acde48001122", "model": "chatgpt_proxyllm", "choices": [{"index": 0, "delta": {"role": "assistant", "content": " you"}}]}\n\ndata: {"id": "chatcmpl-ba6fb52e-e5b2-11ee-b031-acde48001122", "model": "chatgpt_proxyllm", "choices": [{"index": 0, "delta": {"role": "assistant", "content": " today"}}]}\n\ndata: {"id": "chatcmpl-ba6fb52e-e5b2-11ee-b031-acde48001122", "model": "chatgpt_proxyllm", "choices": [{"index": 0, "delta": {"role": "assistant", "content": "?"}}]}\n\ndata: [DONE]\n'})}),"\n",(0,r.jsx)(n.h3,{id:"chat-completion",children:"Chat Completion"}),"\n",(0,r.jsxs)(o.A,{defaultValue:"python",groupId:"chat",values:[{label:"Curl",value:"curl"},{label:"Python",value:"python"}],children:[(0,r.jsx)(s.A,{value:"curl",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:' DBGPT_API_KEY="dbgpt"\n\n curl -X POST "http://localhost:5000/api/v2/chat/completions" \\\n    -H "Authorization: Bearer $DBGPT_API_KEY" \\\n    -H "accept: application/json" \\\n    -H "Content-Type: application/json" \\\n    -d "{\\"messages\\":\\"Hello\\",\\"model\\":\\"chatgpt_proxyllm\\", \\"stream\\": false}"\n'})})}),(0,r.jsx)(s.A,{value:"python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from dbgpt.client import Client\n\nDBGPT_API_KEY = "dbgpt"\nclient = Client(api_key=DBGPT_API_KEY)\nresponse = await client.chat(model="chatgpt_proxyllm" ,messages="hello")\n'})})})]}),"\n",(0,r.jsx)(n.h3,{id:"chat-completion-response",children:"Chat Completion Response"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "id": "a8321543-52e9-47a5-a0b6-3d997463f6a3",\n    "object": "chat.completion",\n    "created": 1710826792,\n    "model": "chatgpt_proxyllm",\n    "choices": [\n        {\n            "index": 0,\n            "message": {\n                "role": "assistant",\n                "content": "Hello! How can I assist you today?"\n            },\n            "finish_reason": null\n        }\n    ],\n    "usage": {\n        "prompt_tokens": 0,\n        "total_tokens": 0,\n        "completion_tokens": 0\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"request-body",children:"Request body"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("b",{children:"messages"}),"\n",(0,r.jsx)("font",{color:"gray",children:" string "}),"\n",(0,r.jsx)("font",{color:"red",children:" Required "}),"\n",(0,r.jsx)(n.p,{children:"A list of messages comprising the conversation so far. Example Python code."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("b",{children:"model"}),"\n",(0,r.jsx)("font",{color:"gray",children:" string "}),"\n",(0,r.jsx)("font",{color:"red",children:" Required "}),"\n",(0,r.jsx)(n.p,{children:"ID of the model to use. See the model endpoint compatibility table for details on which models work with the Chat API."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("b",{children:"chat_mode"}),"\n",(0,r.jsx)("font",{color:"gray",children:" string "}),"\n",(0,r.jsx)("font",{color:"red",children:" Optional "}),"\n",(0,r.jsxs)(n.p,{children:["The DB-GPT chat mode, which can be one of the following: ",(0,r.jsx)(n.code,{children:"chat_normal"}),", ",(0,r.jsx)(n.code,{children:"chat_app"}),", ",(0,r.jsx)(n.code,{children:"chat_knowledge"}),", ",(0,r.jsx)(n.code,{children:"chat_flow"}),", default is ",(0,r.jsx)(n.code,{children:"chat_normal"}),"."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("b",{children:"chat_param"}),"\n",(0,r.jsx)("font",{color:"gray",children:" string "}),"\n",(0,r.jsx)("font",{color:"red",children:" Optional "}),"\n",(0,r.jsxs)(n.p,{children:["The DB-GPT The chat param value of chat mode: ",(0,r.jsx)(n.code,{children:"{app_id}"}),", ",(0,r.jsx)(n.code,{children:"{space_id}"}),", ",(0,r.jsx)(n.code,{children:"{flow_id}"}),", default is ",(0,r.jsx)(n.code,{children:"None"}),"."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("b",{children:"max_new_tokens"}),"\n",(0,r.jsx)("font",{color:"gray",children:" integer "}),"\n",(0,r.jsx)("font",{color:"red",children:" Optional "}),"\n",(0,r.jsx)(n.p,{children:"The maximum number of tokens that can be generated in the chat completion."}),"\n",(0,r.jsx)(n.p,{children:"The total length of input tokens and generated tokens is limited by the model's context length."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("b",{children:"stream"}),"\n",(0,r.jsx)("font",{color:"gray",children:" integer "}),"\n",(0,r.jsx)("font",{color:"red",children:" Optional "}),"\n",(0,r.jsxs)(n.p,{children:["If set, partial message deltas will be sent.\nTokens will be sent as data-only server-sent events as they become available, with the stream terminated by a ",(0,r.jsx)(n.code,{children:"data: [DONE]"})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("b",{children:"temperature"}),"\n",(0,r.jsx)("font",{color:"gray",children:" integer "}),"\n",(0,r.jsx)("font",{color:"red",children:" Optional "}),"\n",(0,r.jsx)(n.p,{children:"What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("b",{children:"conv_uid"}),"\n",(0,r.jsx)("font",{color:"gray",children:" string "}),"\n",(0,r.jsx)("font",{color:"red",children:" Optional "}),"\n",(0,r.jsxs)(n.p,{children:["The conversation id of the model inference, default is ",(0,r.jsx)(n.code,{children:"None"})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("b",{children:"span_id"}),"\n",(0,r.jsx)("font",{color:"gray",children:" string "}),"\n",(0,r.jsx)("font",{color:"red",children:" Optional "}),"\n",(0,r.jsxs)(n.p,{children:["The span id of the model inference, default is ",(0,r.jsx)(n.code,{children:"None"})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("b",{children:"sys_code"}),"\n",(0,r.jsx)("font",{color:"gray",children:" string "}),"\n",(0,r.jsx)("font",{color:"red",children:" Optional "}),"\n",(0,r.jsxs)(n.p,{children:["The system code, default is ",(0,r.jsx)(n.code,{children:"None"})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("b",{children:"user_name"}),"\n",(0,r.jsx)("font",{color:"gray",children:" string "}),"\n",(0,r.jsx)("font",{color:"red",children:" Optional "}),"\n",(0,r.jsxs)(n.p,{children:["The web server user name, default is ",(0,r.jsx)(n.code,{children:"None"})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"chat-stream-response-body",children:"Chat Stream Response Body"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("b",{children:"id"}),"\n",(0,r.jsx)("font",{color:"gray",children:" string "}),"\n",(0,r.jsx)(n.p,{children:"conv_uid of the convsersation."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("b",{children:"model"}),"\n",(0,r.jsx)("font",{color:"gray",children:" string "}),"\n",(0,r.jsx)(n.p,{children:"The model used for the chat completion."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("b",{children:"created"}),"\n",(0,r.jsx)("font",{color:"gray",children:" string "}),"\n",(0,r.jsx)(n.p,{children:"The Unix timestamp (in seconds) of when the chat completion was created."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("b",{children:"choices"}),"\n",(0,r.jsx)("font",{color:"gray",children:" array "}),"\n",(0,r.jsx)(n.p,{children:"A list of chat completion choices. Can be more than one if n is greater than 1."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)("b",{children:"index"}),"\n",(0,r.jsx)("font",{color:"gray",children:" integer "}),"\n",(0,r.jsx)(n.p,{children:"The index of the choice in the list of choices."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)("b",{children:"delta"}),"\n",(0,r.jsx)("font",{color:"gray",children:" object "}),"\n",(0,r.jsx)(n.p,{children:"The chat completion delta."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)("b",{children:"role"}),"\n",(0,r.jsx)("font",{color:"gray",children:" string "}),"\n",(0,r.jsxs)(n.p,{children:["The role of the speaker. Can be ",(0,r.jsx)(n.code,{children:"user"})," or ",(0,r.jsx)(n.code,{children:"assistant"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)("b",{children:"content"}),"\n",(0,r.jsx)("font",{color:"gray",children:" string "}),"\n",(0,r.jsx)(n.p,{children:"The content of the message."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)("b",{children:"finish_reason"}),"\n",(0,r.jsx)("font",{color:"gray",children:" string "}),"\n",(0,r.jsxs)(n.p,{children:["The reason the chat completion finished. Can be ",(0,r.jsx)(n.code,{children:"max_tokens"})," or ",(0,r.jsx)(n.code,{children:"stop"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"chat-response-body",children:"Chat Response Body"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("b",{children:"id"}),"\n",(0,r.jsx)("font",{color:"gray",children:" string "}),"\n",(0,r.jsx)(n.p,{children:"conv_uid of the convsersation."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("b",{children:"model"}),"\n",(0,r.jsx)("font",{color:"gray",children:" string "}),"\n",(0,r.jsx)(n.p,{children:"The model used for the chat completion."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("b",{children:"created"}),"\n",(0,r.jsx)("font",{color:"gray",children:" string "}),"\n",(0,r.jsx)(n.p,{children:"The Unix timestamp (in seconds) of when the chat completion was created."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("b",{children:"object"}),"\n",(0,r.jsx)("font",{color:"gray",children:" string "}),"\n",(0,r.jsx)(n.p,{children:"The object type of the chat completion."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("b",{children:"choices"}),"\n",(0,r.jsx)("font",{color:"gray",children:" array "}),"\n",(0,r.jsx)(n.p,{children:"A list of chat completion choices. Can be more than one if n is greater than 1."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)("b",{children:"index"}),"\n",(0,r.jsx)("font",{color:"gray",children:" integer "}),"\n",(0,r.jsx)(n.p,{children:"The index of the choice in the list of choices."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)("b",{children:"delta"}),"\n",(0,r.jsx)("font",{color:"gray",children:" object "}),"\n",(0,r.jsx)(n.p,{children:"The chat completion delta."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)("b",{children:"role"}),"\n",(0,r.jsx)("font",{color:"gray",children:" string "}),"\n",(0,r.jsxs)(n.p,{children:["The role of the speaker. Can be ",(0,r.jsx)(n.code,{children:"user"})," or ",(0,r.jsx)(n.code,{children:"assistant"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)("b",{children:"content"}),"\n",(0,r.jsx)("font",{color:"gray",children:" string "}),"\n",(0,r.jsx)(n.p,{children:"The content of the message."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)("b",{children:"finish_reason"}),"\n",(0,r.jsx)("font",{color:"gray",children:" string "}),"\n",(0,r.jsxs)(n.p,{children:["The reason the chat completion finished. Can be ",(0,r.jsx)(n.code,{children:"max_tokens"})," or ",(0,r.jsx)(n.code,{children:"stop"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("b",{children:"usage"}),"\n",(0,r.jsx)("font",{color:"gray",children:" object "}),"\n",(0,r.jsx)(n.p,{children:"The usage statistics for the chat completion."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)("b",{children:"prompt_tokens"}),"\n",(0,r.jsx)("font",{color:"gray",children:" integer "}),"\n",(0,r.jsx)(n.p,{children:"The number of tokens in the prompt."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)("b",{children:"total_tokens"}),"\n",(0,r.jsx)("font",{color:"gray",children:" integer "}),"\n",(0,r.jsx)(n.p,{children:"The total number of tokens in the chat completion."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)("b",{children:"completion_tokens"}),"\n",(0,r.jsx)("font",{color:"gray",children:" integer "}),"\n",(0,r.jsx)(n.p,{children:"The number of tokens in the chat completion."}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>s});t(6540);var r=t(53);const l={tabItem:"tabItem_Ymn6"};var o=t(4848);function s(e){let{children:n,hidden:t,className:s}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,r.A)(l.tabItem,s),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>_});var r=t(6540),l=t(53),o=t(3104),s=t(6347),a=t(205),c=t(7485),i=t(1682),d=t(9466);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:l}}=e;return{value:n,label:t,attributes:r,default:l}}))}(t);return function(e){const n=(0,i.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function u(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:t}=e;const l=(0,s.W6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c.aZ)(o),(0,r.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(l.location.search);n.set(o,e),l.replace({...l.location,search:n.toString()})}),[o,l])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:l}=e,o=p(e),[s,c]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!u({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:o}))),[i,h]=x({queryString:t,groupId:l}),[m,j]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[l,o]=(0,d.Dv)(t);return[l,(0,r.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:l}),f=(()=>{const e=i??m;return u({value:e,tabValues:o})?e:null})();(0,a.A)((()=>{f&&c(f)}),[f]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!u({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);c(e),h(e),j(e)}),[h,j,o]),tabValues:o}}var j=t(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(4848);function g(e){let{className:n,block:t,selectedValue:r,selectValue:s,tabValues:a}=e;const c=[],{blockElementScrollPositionUntilNextRender:i}=(0,o.a_)(),d=e=>{const n=e.currentTarget,t=c.indexOf(n),l=a[t].value;l!==r&&(i(n),s(l))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":t},n),children:a.map((e=>{let{value:n,label:t,attributes:o}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>c.push(e),onKeyDown:h,onClick:d,...o,className:(0,l.A)("tabs__item",f.tabItem,o?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function y(e){let{lazy:n,children:t,selectedValue:l}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===l));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==l})))})}function v(e){const n=m(e);return(0,b.jsxs)("div",{className:(0,l.A)("tabs-container",f.tabList),children:[(0,b.jsx)(g,{...e,...n}),(0,b.jsx)(y,{...e,...n})]})}function _(e){const n=(0,j.A)();return(0,b.jsx)(v,{...e,children:h(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var r=t(6540);const l={},o=r.createContext(l);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);