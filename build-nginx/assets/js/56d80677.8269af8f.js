"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6542],{8649:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=n(4848),o=n(8453);const r={},i="2.3 Join Operator",s={id:"awel/awel_tutorial/basic_syntax/2.3_join_operator",title:"2.3 Join Operator",description:"The JoinOperator is used to join the data from multiple input data into a single data.",source:"@site/docs/awel/awel_tutorial/basic_syntax/2.3_join_operator.md",sourceDirName:"awel/awel_tutorial/basic_syntax",slug:"/awel/awel_tutorial/basic_syntax/2.3_join_operator",permalink:"/docs/latest/awel/awel_tutorial/basic_syntax/2.3_join_operator",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"2.2 Reduce Operator",permalink:"/docs/latest/awel/awel_tutorial/basic_syntax/2.2_reduce_operator"},next:{title:"2.4 Branch Operator",permalink:"/docs/latest/awel/awel_tutorial/basic_syntax/2.4_branch_operator"}},l={},c=[{value:"Build a <code>JoinOperator</code> with a combine function",id:"build-a-joinoperator-with-a-combine-function",level:2},{value:"Examples",id:"examples",level:2},{value:"Two Sum",id:"two-sum",level:3}];function p(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"23-join-operator",children:"2.3 Join Operator"}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"JoinOperator"})," is used to join the data from multiple input data into a single data.\nExample, if you have two parents, you can join the data from both parents into a single\ndata."]}),"\n",(0,a.jsxs)(t.p,{children:["There are one way to use the ",(0,a.jsx)(t.code,{children:"JoinOperator"}),":"]}),"\n",(0,a.jsxs)(t.h2,{id:"build-a-joinoperator-with-a-combine-function",children:["Build a ",(0,a.jsx)(t.code,{children:"JoinOperator"})," with a combine function"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'from dbgpt.core.awel import DAG, JoinOperator\n\nwith DAG("awel_join_operator") as dag:\n    task = JoinOperator(combine_function=lambda x, y: x + y)\n'})}),"\n",(0,a.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(t.h3,{id:"two-sum",children:"Two Sum"}),"\n",(0,a.jsxs)(t.p,{children:["In this example, we will create a ",(0,a.jsx)(t.code,{children:"JoinOperator"})," that sums the data from two parents."]}),"\n",(0,a.jsxs)(t.p,{children:["Create a new file named ",(0,a.jsx)(t.code,{children:"join_operator_sum_numbers.py"})," in the ",(0,a.jsx)(t.code,{children:"awel_tutorial"})," directory and add the following code:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import asyncio\nfrom dbgpt.core.awel import (\n    DAG, JoinOperator, MapOperator, InputOperator, SimpleCallDataInputSource\n)\n\nwith DAG("sum_numbers_dag") as dag:\n    # Create a input task to receive data from call_data\n    input_task = InputOperator(input_source=SimpleCallDataInputSource())\n    task1 = MapOperator(map_function=lambda x: x["t1"])\n    task2 = MapOperator(map_function=lambda x: x["t2"])\n    sum_task = JoinOperator(combine_function=lambda x, y: x + y)\n    input_task >> task1 >> sum_task\n    input_task >> task2 >> sum_task\n\nif asyncio.run(sum_task.call(call_data={"t1": 5, "t2": 8})) == 13:\n    print("Success!")\nelse:\n    print("Failed")\n'})}),"\n",(0,a.jsx)(t.p,{children:"And run the following command to execute the code:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"poetry run python awel_tutorial/join_operator_sum_numbers.py\n"})}),"\n",(0,a.jsx)(t.p,{children:'And you will see "Success!" printed to the console.'}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"Success!\n"})}),"\n",(0,a.jsx)(t.p,{children:"The graph of the DAG is like this:"}),"\n",(0,a.jsx)("p",{align:"left",children:(0,a.jsx)("img",{src:"/img/awel/awel_tutorial/join_operator_example_1.png",width:"1000px"})})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var a=n(6540);const o={},r=a.createContext(o);function i(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);