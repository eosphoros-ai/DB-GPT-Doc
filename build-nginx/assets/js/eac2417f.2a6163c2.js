"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7104],{9041:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(4848),r=n(8453);const o={},i="2.8 Input Operator",l={id:"awel/awel_tutorial/basic_syntax/2.8_input_operator",title:"2.8 Input Operator",description:"The input operator is used to read a value from an input source. It allways as the",source:"@site/versioned_docs/version-v0.5.1/awel/awel_tutorial/basic_syntax/2.8_input_operator.md",sourceDirName:"awel/awel_tutorial/basic_syntax",slug:"/awel/awel_tutorial/basic_syntax/2.8_input_operator",permalink:"/docs/v0.5.1/awel/awel_tutorial/basic_syntax/2.8_input_operator",draft:!1,unlisted:!1,tags:[],version:"v0.5.1",frontMatter:{},sidebar:"docs",previous:{title:"2.7 Transform Stream Operator",permalink:"/docs/v0.5.1/awel/awel_tutorial/basic_syntax/2.7_transform_stream_operator"},next:{title:"3.1 Http Trigger",permalink:"/docs/v0.5.1/awel/awel_tutorial/network_program/3.1_http_trigger"}},s={},p=[{value:"Build A <code>InputOperator</code> With A Input Source",id:"build-a-inputoperator-with-a-input-source",level:2},{value:"Examples",id:"examples",level:2},{value:"Print The Input Data",id:"print-the-input-data",level:3},{value:"Print Stream Data",id:"print-stream-data",level:3},{value:"Print Call Data",id:"print-call-data",level:3},{value:"Input Source",id:"input-source",level:2},{value:"<code>SimpleInputSource</code>",id:"simpleinputsource",level:3},{value:"<code>SimpleCallDataInputSource</code>",id:"simplecalldatainputsource",level:3},{value:"Create Your Own Input Source",id:"create-your-own-input-source",level:3}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"28-input-operator",children:"2.8 Input Operator"}),"\n",(0,a.jsxs)(t.p,{children:["The input operator is used to read a value from an ",(0,a.jsx)(t.strong,{children:"input source"}),". It allways as the\nfirst Operator in a DAG, and it allows you easily to write your own input source."]}),"\n",(0,a.jsx)(t.p,{children:"The input operator is a special operator, it does not have any input, and it has one\noutput."}),"\n",(0,a.jsx)(t.p,{children:"There are one way to use the input operator:"}),"\n",(0,a.jsxs)(t.h2,{id:"build-a-inputoperator-with-a-input-source",children:["Build A ",(0,a.jsx)(t.code,{children:"InputOperator"})," With A Input Source"]}),"\n",(0,a.jsxs)(t.p,{children:["Just pass the input source to the ",(0,a.jsx)(t.code,{children:"InputOperator"})," constructor."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'from dbgpt.core.awel import DAG, InputOperator, SimpleInputSource\n\nwith DAG("awel_input_operator") as dag:\n    input_source = SimpleInputSource(data="Hello, World!")\n    input_task = InputOperator(input_source=input_source)\n'})}),"\n",(0,a.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(t.h3,{id:"print-the-input-data",children:"Print The Input Data"}),"\n",(0,a.jsxs)(t.p,{children:["This example shows how to use the ",(0,a.jsx)(t.code,{children:"InputOperator"})," to print the input data, it uses\n",(0,a.jsx)(t.code,{children:"SimpleInputSource"})," which is build with a string data as input source."]}),"\n",(0,a.jsxs)(t.p,{children:["Create a new file named ",(0,a.jsx)(t.code,{children:"input_operator_print_data.py"})," in the ",(0,a.jsx)(t.code,{children:"awel_tutorial"})," directory\nand add the following code:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import asyncio\nfrom dbgpt.core.awel import DAG, MapOperator, InputOperator, SimpleInputSource\n\nwith DAG("awel_input_operator") as dag:\n    input_source = SimpleInputSource(data="Hello, World!")\n    input_task = InputOperator(input_source=input_source)\n    print_task = MapOperator(map_function=lambda x: print(x))\n    input_task >> print_task\n\nasyncio.run(print_task.call())\n'})}),"\n",(0,a.jsx)(t.p,{children:"And run the following command to execute the code:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"poetry run python awel_tutorial/input_operator_print_data.py\n"})}),"\n",(0,a.jsx)(t.p,{children:"And you will see the following output:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"Hello, World!\n"})}),"\n",(0,a.jsx)(t.h3,{id:"print-stream-data",children:"Print Stream Data"}),"\n",(0,a.jsxs)(t.p,{children:["This example shows how to use the ",(0,a.jsx)(t.code,{children:"InputOperator"})," to print the stream data, it uses\n",(0,a.jsx)(t.code,{children:"SimpleInputSource"})," which is build with a stream data as input source."]}),"\n",(0,a.jsxs)(t.p,{children:["Create a new file named ",(0,a.jsx)(t.code,{children:"input_operator_print_stream_data.py"})," in the ",(0,a.jsx)(t.code,{children:"awel_tutorial"}),"\ndirectory and add the following code:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import asyncio\nfrom dbgpt.core.awel import DAG, InputOperator, SimpleInputSource\n\nasync def stream_data():\n    for i in range(10):\n        yield i\n\nwith DAG("awel_input_operator") as dag:\n    input_source = SimpleInputSource(data=stream_data())\n    input_task = InputOperator(input_source=input_source)\n\nasync def print_stream(t: InputOperator):\n    async for i in await t.call_stream():\n        print(i)\n\nasyncio.run(print_stream(input_task))\n'})}),"\n",(0,a.jsx)(t.p,{children:"And run the following command to execute the code:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"poetry run python awel_tutorial/input_operator_print_stream_data.py\n"})}),"\n",(0,a.jsx)(t.p,{children:"And you will see the following output printed to the console."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n"})}),"\n",(0,a.jsx)(t.h3,{id:"print-call-data",children:"Print Call Data"}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.strong,{children:"call data"})," is the data that is passed to the ",(0,a.jsx)(t.code,{children:"call"})," method or ",(0,a.jsx)(t.code,{children:"call_stream"})," method\nof the operator."]}),"\n",(0,a.jsxs)(t.p,{children:["This example shows how to use the ",(0,a.jsx)(t.code,{children:"InputOperator"})," to print the call data, it uses\n",(0,a.jsx)(t.code,{children:"SimpleCallDataInputSource"})," which is build with a call data as input source."]}),"\n",(0,a.jsxs)(t.p,{children:["Create a new file named ",(0,a.jsx)(t.code,{children:"input_operator_print_call_data.py"})," in the ",(0,a.jsx)(t.code,{children:"awel_tutorial"})," directory and add the following code:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import asyncio\nfrom dbgpt.core.awel import DAG, MapOperator, InputOperator, SimpleCallDataInputSource\n\nwith DAG("awel_input_operator") as dag:\n    input_source = SimpleCallDataInputSource()\n    input_task = InputOperator(input_source=input_source)\n    print_task = MapOperator(map_function=lambda x: print(x))\n    input_task >> print_task\n\nasyncio.run(print_task.call(call_data="Hello, World!"))\nasyncio.run(print_task.call(call_data="AWEL is cool!"))\n'})}),"\n",(0,a.jsx)(t.p,{children:"And run the following command to execute the code:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"poetry run python awel_tutorial/input_operator_print_call_data.py\n"})}),"\n",(0,a.jsx)(t.p,{children:"And you will see the following output printed to the console."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"Hello, World!\nAWEL is cool!\n"})}),"\n",(0,a.jsx)(t.h2,{id:"input-source",children:"Input Source"}),"\n",(0,a.jsxs)(t.p,{children:["There two built-in input sources, ",(0,a.jsx)(t.code,{children:"SimpleInputSource"})," and ",(0,a.jsx)(t.code,{children:"SimpleCallDataInputSource"}),"."]}),"\n",(0,a.jsx)(t.h3,{id:"simpleinputsource",children:(0,a.jsx)(t.code,{children:"SimpleInputSource"})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"SimpleInputSource"})," is used to create an input source with a single data or a stream data."]}),"\n",(0,a.jsx)(t.h3,{id:"simplecalldatainputsource",children:(0,a.jsx)(t.code,{children:"SimpleCallDataInputSource"})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"SimpleCallDataInputSource"})," is used to create an input source with a call data which\nis passed by the ",(0,a.jsx)(t.code,{children:"call"})," method or ",(0,a.jsx)(t.code,{children:"call_stream"})," method of the operator."]}),"\n",(0,a.jsx)(t.h3,{id:"create-your-own-input-source",children:"Create Your Own Input Source"}),"\n",(0,a.jsxs)(t.p,{children:["The simplest way to create your own input source is implementing the ",(0,a.jsx)(t.code,{children:"BaseInputSource"})," and override the ",(0,a.jsx)(t.code,{children:"_read_data"})," method."]}),"\n",(0,a.jsxs)(t.p,{children:["Create a new file named ",(0,a.jsx)(t.code,{children:"my_input_source.py"})," in the ",(0,a.jsx)(t.code,{children:"awel_tutorial"})," directory and add the following code:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import asyncio\nfrom dbgpt.core.awel import DAG, InputOperator, MapOperator, BaseInputSource, TaskContext\n\nclass MyInputSource(BaseInputSource):\n    """Create an input source with a single data"""\n    def _read_data(self, ctx: TaskContext) -> str:\n        return "Hello, World!"\n\nwith DAG("awel_input_operator") as dag:\n    input_source = MyInputSource()\n    input_task = InputOperator(input_source=input_source)\n    print_task = MapOperator(map_function=lambda x: print(x))\n\n    input_task >> print_task\n\nasyncio.run(print_task.call())\n'})}),"\n",(0,a.jsx)(t.p,{children:"And run the following command to execute the code:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"poetry run python awel_tutorial/my_input_source.py\n"})}),"\n",(0,a.jsx)(t.p,{children:"And you will see the following output printed to the console."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"Hello, World!\n"})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>l});var a=n(6540);const r={},o=a.createContext(r);function i(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);